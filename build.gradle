plugins {
    id "io.spring.dependency-management" version "1.0.6.RELEASE"
    id "com.github.johnrengelman.shadow" version "4.0.2"
    id "org.jetbrains.kotlin.jvm" version "1.3.30"
    id "org.jetbrains.kotlin.kapt" version "1.3.30"
    id "org.jetbrains.kotlin.plugin.allopen" version "1.3.30"
    id "org.sonarqube" version "2.7"
    id "com.moowork.node" version "1.3.1"
}

apply plugin: "application"

version "0.1"
group "dropwizard-healthchecks-dashboard"

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://jcenter.bintray.com" }
}

dependencyManagement {
    imports {
        mavenBom 'io.micronaut:micronaut-bom:1.0.5'
    }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}"
    compile "org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}"
    compile "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.2.0"
    compile "io.micronaut:micronaut-runtime"
    compile "io.micronaut:micronaut-http-server-netty"
    compile 'io.micronaut.configuration:micronaut-mongo-reactive'
    compile "com.mashape.unirest:unirest-java:1.4.9"

    kapt "io.micronaut:micronaut-inject-java"
    kapt "io.micronaut:micronaut-validation"

    runtime "ch.qos.logback:logback-classic:1.2.3"
    runtime "com.fasterxml.jackson.module:jackson-module-kotlin:2.9.7"

    kaptTest "io.micronaut:micronaut-inject-java"
    testCompile "io.micronaut:micronaut-inject-java"
    testCompile "org.hamcrest:hamcrest-library:2.1"
    testCompile "io.micronaut.test:micronaut-test-junit5:1.0.2"
    testCompile "org.mockito:mockito-junit-jupiter:2.22.0"
    testCompile "com.nhaarman.mockitokotlin2:mockito-kotlin:2.1.0"
    testCompile "org.junit.jupiter:junit-jupiter-engine:5.1.0"
    testCompile("org.junit.jupiter:junit-jupiter-params:5.3.2")
    testCompile "io.rest-assured:rest-assured:3.3.0"
    testCompile "org.mock-server:mockserver-netty:5.5.1"
    testCompile "org.jetbrains.kotlin:kotlin-test:${kotlinVersion}"
    testCompile 'de.flapdoodle.embed:de.flapdoodle.embed.mongo:2.0.1'
}

shadowJar {
    mergeServiceFiles()
}

run.jvmArgs('-noverify', '-XX:TieredStopAtLevel=1')

mainClassName = "com.github.jensim.dropwizarddashboard.Application"

test {
    useJUnitPlatform()
}

allOpen {
    annotation("io.micronaut.aop.Around")
}

task frontendInstall(type: NpmTask) {
    description = "Installs dependencies from package.json"
    workingDir = file("${project.projectDir}/frontend")
    args = ['install']
}

task frontendBuild(type: NpmTask) {
    description = "Installs dependencies from package.json"
    workingDir = file("${project.projectDir}/frontend")
    args = ['run', 'build']
}

task frontendServe(type: NpmTask) {
    description = "Build continous frontend"
    workingDir = file("${project.projectDir}/frontend")
    args = ['run', 'serve']
}

compileKotlin {
    kotlinOptions {
        jvmTarget = '1.8'
        //Will retain parameter names for Java reflection
        javaParameters = true
    }
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = '1.8'
        javaParameters = true
    }
}
